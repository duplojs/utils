import { type EscapeVoid } from "./types";
import { type AnyValue } from "./types/anyValue";
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1): (input: GenericInput) => GenericOutputPipe1;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2): (input: GenericInput) => GenericOutputPipe2;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2, pipe3: (input: GenericOutputPipe2) => GenericOutputPipe3): (input: GenericInput) => GenericOutputPipe3;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2, pipe3: (input: GenericOutputPipe2) => GenericOutputPipe3, pipe4: (input: GenericOutputPipe3) => GenericOutputPipe4): (input: GenericInput) => GenericOutputPipe4;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2, pipe3: (input: GenericOutputPipe2) => GenericOutputPipe3, pipe4: (input: GenericOutputPipe3) => GenericOutputPipe4, pipe5: (input: GenericOutputPipe4) => GenericOutputPipe5): (input: GenericInput) => GenericOutputPipe5;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2, pipe3: (input: GenericOutputPipe2) => GenericOutputPipe3, pipe4: (input: GenericOutputPipe3) => GenericOutputPipe4, pipe5: (input: GenericOutputPipe4) => GenericOutputPipe5, pipe6: (input: GenericOutputPipe5) => GenericOutputPipe6): (input: GenericInput) => GenericOutputPipe6;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid, GenericOutputPipe7 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2, pipe3: (input: GenericOutputPipe2) => GenericOutputPipe3, pipe4: (input: GenericOutputPipe3) => GenericOutputPipe4, pipe5: (input: GenericOutputPipe4) => GenericOutputPipe5, pipe6: (input: GenericOutputPipe5) => GenericOutputPipe6, pipe7: (input: GenericOutputPipe6) => GenericOutputPipe7): (input: GenericInput) => GenericOutputPipe7;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid, GenericOutputPipe7 extends AnyValue | EscapeVoid, GenericOutputPipe8 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2, pipe3: (input: GenericOutputPipe2) => GenericOutputPipe3, pipe4: (input: GenericOutputPipe3) => GenericOutputPipe4, pipe5: (input: GenericOutputPipe4) => GenericOutputPipe5, pipe6: (input: GenericOutputPipe5) => GenericOutputPipe6, pipe7: (input: GenericOutputPipe6) => GenericOutputPipe7, pipe8: (input: GenericOutputPipe7) => GenericOutputPipe8): (input: GenericInput) => GenericOutputPipe8;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid, GenericOutputPipe7 extends AnyValue | EscapeVoid, GenericOutputPipe8 extends AnyValue | EscapeVoid, GenericOutputPipe9 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2, pipe3: (input: GenericOutputPipe2) => GenericOutputPipe3, pipe4: (input: GenericOutputPipe3) => GenericOutputPipe4, pipe5: (input: GenericOutputPipe4) => GenericOutputPipe5, pipe6: (input: GenericOutputPipe5) => GenericOutputPipe6, pipe7: (input: GenericOutputPipe6) => GenericOutputPipe7, pipe8: (input: GenericOutputPipe7) => GenericOutputPipe8, pipe9: (input: GenericOutputPipe8) => GenericOutputPipe9): (input: GenericInput) => GenericOutputPipe9;
export declare function innerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid, GenericOutputPipe7 extends AnyValue | EscapeVoid, GenericOutputPipe8 extends AnyValue | EscapeVoid, GenericOutputPipe9 extends AnyValue | EscapeVoid, GenericOutputPipe10 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => GenericOutputPipe1, pipe2: (input: GenericOutputPipe1) => GenericOutputPipe2, pipe3: (input: GenericOutputPipe2) => GenericOutputPipe3, pipe4: (input: GenericOutputPipe3) => GenericOutputPipe4, pipe5: (input: GenericOutputPipe4) => GenericOutputPipe5, pipe6: (input: GenericOutputPipe5) => GenericOutputPipe6, pipe7: (input: GenericOutputPipe6) => GenericOutputPipe7, pipe8: (input: GenericOutputPipe7) => GenericOutputPipe8, pipe9: (input: GenericOutputPipe8) => GenericOutputPipe9, pipe10: (input: GenericOutputPipe9) => GenericOutputPipe10): (input: GenericInput) => GenericOutputPipe10;
