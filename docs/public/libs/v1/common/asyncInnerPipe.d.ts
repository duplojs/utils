import { type MaybeFutureEither } from "../either/future/maybeFutureEither";
import { type MaybePromise, type EscapeVoid } from "./types";
import { type AnyValue } from "./types/anyValue";
type MaybePromiseLike<GenericValue extends unknown> = MaybePromise<GenericValue> | MaybeFutureEither<GenericValue>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe1>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe2>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>, pipe3: (input: GenericOutputPipe2) => MaybePromiseLike<GenericOutputPipe3>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe3>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>, pipe3: (input: GenericOutputPipe2) => MaybePromiseLike<GenericOutputPipe3>, pipe4: (input: GenericOutputPipe3) => MaybePromiseLike<GenericOutputPipe4>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe4>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>, pipe3: (input: GenericOutputPipe2) => MaybePromiseLike<GenericOutputPipe3>, pipe4: (input: GenericOutputPipe3) => MaybePromiseLike<GenericOutputPipe4>, pipe5: (input: GenericOutputPipe4) => MaybePromiseLike<GenericOutputPipe5>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe5>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>, pipe3: (input: GenericOutputPipe2) => MaybePromiseLike<GenericOutputPipe3>, pipe4: (input: GenericOutputPipe3) => MaybePromiseLike<GenericOutputPipe4>, pipe5: (input: GenericOutputPipe4) => MaybePromiseLike<GenericOutputPipe5>, pipe6: (input: GenericOutputPipe5) => MaybePromiseLike<GenericOutputPipe6>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe6>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid, GenericOutputPipe7 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>, pipe3: (input: GenericOutputPipe2) => MaybePromiseLike<GenericOutputPipe3>, pipe4: (input: GenericOutputPipe3) => MaybePromiseLike<GenericOutputPipe4>, pipe5: (input: GenericOutputPipe4) => MaybePromiseLike<GenericOutputPipe5>, pipe6: (input: GenericOutputPipe5) => MaybePromiseLike<GenericOutputPipe6>, pipe7: (input: GenericOutputPipe6) => MaybePromiseLike<GenericOutputPipe7>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe7>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid, GenericOutputPipe7 extends AnyValue | EscapeVoid, GenericOutputPipe8 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>, pipe3: (input: GenericOutputPipe2) => MaybePromiseLike<GenericOutputPipe3>, pipe4: (input: GenericOutputPipe3) => MaybePromiseLike<GenericOutputPipe4>, pipe5: (input: GenericOutputPipe4) => MaybePromiseLike<GenericOutputPipe5>, pipe6: (input: GenericOutputPipe5) => MaybePromiseLike<GenericOutputPipe6>, pipe7: (input: GenericOutputPipe6) => MaybePromiseLike<GenericOutputPipe7>, pipe8: (input: GenericOutputPipe7) => MaybePromiseLike<GenericOutputPipe8>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe8>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid, GenericOutputPipe7 extends AnyValue | EscapeVoid, GenericOutputPipe8 extends AnyValue | EscapeVoid, GenericOutputPipe9 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>, pipe3: (input: GenericOutputPipe2) => MaybePromiseLike<GenericOutputPipe3>, pipe4: (input: GenericOutputPipe3) => MaybePromiseLike<GenericOutputPipe4>, pipe5: (input: GenericOutputPipe4) => MaybePromiseLike<GenericOutputPipe5>, pipe6: (input: GenericOutputPipe5) => MaybePromiseLike<GenericOutputPipe6>, pipe7: (input: GenericOutputPipe6) => MaybePromiseLike<GenericOutputPipe7>, pipe8: (input: GenericOutputPipe7) => MaybePromiseLike<GenericOutputPipe8>, pipe9: (input: GenericOutputPipe8) => MaybePromiseLike<GenericOutputPipe9>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe9>>;
export declare function asyncInnerPipe<GenericInput extends AnyValue, GenericOutputPipe1 extends AnyValue | EscapeVoid, GenericOutputPipe2 extends AnyValue | EscapeVoid, GenericOutputPipe3 extends AnyValue | EscapeVoid, GenericOutputPipe4 extends AnyValue | EscapeVoid, GenericOutputPipe5 extends AnyValue | EscapeVoid, GenericOutputPipe6 extends AnyValue | EscapeVoid, GenericOutputPipe7 extends AnyValue | EscapeVoid, GenericOutputPipe8 extends AnyValue | EscapeVoid, GenericOutputPipe9 extends AnyValue | EscapeVoid, GenericOutputPipe10 extends AnyValue | EscapeVoid>(pipe1: (input: GenericInput) => MaybePromiseLike<GenericOutputPipe1>, pipe2: (input: GenericOutputPipe1) => MaybePromiseLike<GenericOutputPipe2>, pipe3: (input: GenericOutputPipe2) => MaybePromiseLike<GenericOutputPipe3>, pipe4: (input: GenericOutputPipe3) => MaybePromiseLike<GenericOutputPipe4>, pipe5: (input: GenericOutputPipe4) => MaybePromiseLike<GenericOutputPipe5>, pipe6: (input: GenericOutputPipe5) => MaybePromiseLike<GenericOutputPipe6>, pipe7: (input: GenericOutputPipe6) => MaybePromiseLike<GenericOutputPipe7>, pipe8: (input: GenericOutputPipe7) => MaybePromiseLike<GenericOutputPipe8>, pipe9: (input: GenericOutputPipe8) => MaybePromiseLike<GenericOutputPipe9>, pipe10: (input: GenericOutputPipe9) => MaybePromiseLike<GenericOutputPipe10>): (input: MaybePromiseLike<GenericInput>) => Promise<Awaited<GenericOutputPipe10>>;
export {};
